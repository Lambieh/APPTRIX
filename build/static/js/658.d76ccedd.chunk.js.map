{"version":3,"file":"static/js/658.d76ccedd.chunk.js","mappings":"kLAQA,MA4DA,EA5DaA,KACX,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAyB,IAE3CC,GAAQC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,QACtDC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,MAAYC,MAAMC,GAAQT,EAAQS,IAAK,GACtC,IAEH,MAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBD,SAC5Bd,EAAKgB,KAAKC,IAEPC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,WAAUD,SAAA,EACvBD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,yBAAwBD,UACrCD,EAAAA,EAAAA,KAAA,OAAKM,IAAKF,EAAKG,WAEjBP,EAAAA,EAAAA,KAAA,OAAAC,SAAMG,EAAKI,QACXR,EAAAA,EAAAA,KAAA,OAAAC,SAAMG,EAAKK,SACXT,EAAAA,EAAAA,KAAA,OAAAC,SAAMG,EAAKM,cACVpB,EAAMG,KAAKkB,MAAMC,GAAYA,EAAGC,IAAMT,EAAKS,MAC1CR,EAAAA,EAAAA,MAAA,OAAKH,UAAU,sBAAqBD,SAAA,EAClCD,EAAAA,EAAAA,KAAA,UACEE,UAAU,MACVY,QAASA,IACPhB,GACEiB,EAAAA,EAAAA,IACEzB,EAAMG,KAAKuB,MAAMC,GAAYA,EAAGJ,KAAOT,EAAKS,OAGjDZ,SACF,MAGAX,EAAMG,KAAKU,KAAKS,IACf,GAAIA,EAAGC,IAAMT,EAAKS,GAChB,OAAOD,EAAGtB,KACZ,KAEFU,EAAAA,EAAAA,KAAA,UACEE,UAAU,MACVY,QAASA,IAAMhB,GAASoB,EAAAA,EAAAA,IAAQd,IAAOH,SACxC,UAKHD,EAAAA,EAAAA,KAAA,UAAQE,UAAU,MAAMY,QAASA,IAAMhB,GAASoB,EAAAA,EAAAA,IAAQd,IAAOH,SAAC,QAlCrCkB,OAAOC,mBA0CxC,C,0FC3DV,MASMC,GAAMC,EAAAA,EAAAA,IATW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,+CAIIC,GAAOC,EAAAA,EAAAA,IAAQT,GACfU,GAAKC,EAAAA,EAAAA,IAAaX,GAaxBY,eAAetC,IACpB,MAAMuC,GAAYC,EAAAA,EAAAA,IAAWJ,EAAI,UAGjC,aAF2BK,EAAAA,EAAAA,IAAQF,IACLG,KAAKlC,KAAKmC,GAAQA,EAAIC,QAEtD,CAEON,eAAef,EAAQsB,GAC5B,IACE,MAAMC,QAAeC,EAAAA,EAAAA,KAAOP,EAAAA,EAAAA,IAAWJ,EAAI,QAASS,GAEpD,OADAG,QAAQC,IAAI,6BAA8BH,EAAO5B,IAC1C4B,CACT,CAAE,MAAOI,GACPF,QAAQG,MAAM,0BAA2BD,EAC3C,CACF,C","sources":["Pages/Menu.tsx","firebase.js"],"sourcesContent":["import { getDishes } from \"../firebase.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { DocumentData } from \"firebase/firestore\";\r\nimport \"./Menu.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCart, removeFromCart } from \"../Store/apptrixSlice\";\r\nimport { RootState } from \"../Store/index.js\";\r\n\r\nconst Menu = () => {\r\n  const [menu, setMenu] = useState<DocumentData[]>([]);\r\n\r\n  const count = useSelector((state: RootState) => state.cart);\r\n  useEffect(() => {\r\n    getDishes().then((res) => setMenu(res));\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <div className=\"menu_style_all\">\r\n        {menu.map((item) => {\r\n          return (\r\n            <div className=\"one_dish\" key={crypto.randomUUID()}>\r\n              <div className=\"dishes_image_container\">\r\n                <img src={item.image} />\r\n              </div>\r\n              <div>{item.name}</div>\r\n              <div>{item.price}</div>\r\n              <div>{item.description}</div>\r\n              {count.cart.some((it: any) => it.id == item.id) ? (\r\n                <div className=\"btn_size_plus_minus\">\r\n                  <button\r\n                    className=\"btn\"\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeFromCart(\r\n                          count.cart.find((el: any) => el.id === item.id)\r\n                        )\r\n                      )\r\n                    }\r\n                  >\r\n                    -\r\n                  </button>\r\n                  {count.cart.map((it: any) => {\r\n                    if (it.id == item.id) {\r\n                      return it.count;\r\n                    }\r\n                  })}\r\n                  <button\r\n                    className=\"btn\"\r\n                    onClick={() => dispatch(addCart(item))}\r\n                  >\r\n                    +\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <button className=\"btn\" onClick={() => dispatch(addCart(item))}>\r\n                  +\r\n                </button>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, addDoc, getDocs } from \"firebase/firestore\";\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAf11dSflFQTAsNCo2s-37S-qaBr1opnuQ\",\r\n  authDomain: \"apptrix-22335.firebaseapp.com\",\r\n  projectId: \"apptrix-22335\",\r\n  storageBucket: \"apptrix-22335.appspot.com\",\r\n  messagingSenderId: \"1087599733576\",\r\n  appId: \"1:1087599733576:web:7fb713cc9e3291b962217d\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport async function addDish(\r\n  cfg = { name: \"test\", price: 0, description: \"test\", image: \"\" }\r\n) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"dishes\"), cfg);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nexport async function getDishes() {\r\n  const dishesCol = collection(db, \"dishes\");\r\n  const dishSnapshot = await getDocs(dishesCol);\r\n  const dishList = dishSnapshot.docs.map((doc) => doc.data());\r\n  return dishList;\r\n}\r\n\r\nexport async function addCart(cfg) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"cart\"), cfg);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n    return docRef;\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nexport async function getCart() {\r\n  const cartCol = collection(db, \"cart\");\r\n  const cartSnapshot = await getDocs(cartCol);\r\n  const cartList = cartSnapshot.docs.map((doc) => doc.data());\r\n  return cartList;\r\n}\r\n"],"names":["Menu","menu","setMenu","useState","count","useSelector","state","cart","useEffect","getDishes","then","res","dispatch","useDispatch","_jsx","children","className","map","item","_jsxs","src","image","name","price","description","some","it","id","onClick","removeFromCart","find","el","addCart","crypto","randomUUID","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","async","dishesCol","collection","getDocs","docs","doc","data","cfg","docRef","addDoc","console","log","e","error"],"sourceRoot":""}