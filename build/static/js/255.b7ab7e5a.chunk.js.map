{"version":3,"file":"static/js/255.b7ab7e5a.chunk.js","mappings":"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","sources":["Pages/ModWindow.tsx","Pages/CartPage.tsx","firebase.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./ModWindow.css\";\r\nimport { addCart } from \"../firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../Store\";\r\nconst ModWindow = (props: any) => {\r\n  const [data, setData] = useState<{\r\n    street: string;\r\n    house: string;\r\n    app: string;\r\n    sel: string;\r\n  }>({\r\n    street: \"\",\r\n    house: \"\",\r\n    app: \"\",\r\n    sel: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const count = useSelector((state: RootState) => state.cart);\r\n\r\n  const handleCreateOrder = async (data: any) => {\r\n    let obj = {\r\n      paymentCredentilas: { ...data },\r\n      // @ts-ignore\r\n      orders: [...count.cart.map(({ id, ...rest }) => ({ ...rest }))],\r\n    };\r\n\r\n    console.log(obj);\r\n\r\n    const result = await addCart(obj);\r\n    setData({ street: \"\", house: \"\", app: \"\", sel: \"\" });\r\n    localStorage.removeItem(\"persist:root\");\r\n    navigate(`/order/${result?.id}`);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mod_window\" onClick={() => props.setModAct(false)}>\r\n      <div className=\"mod_content\" onClick={(event) => event.stopPropagation()}>\r\n        <input\r\n          value={data.street}\r\n          type=\"text\"\r\n          onChange={(event) => setData({ ...data, street: event.target.value })}\r\n          placeholder=\"Улица\"\r\n        />\r\n        <input\r\n          value={data.house}\r\n          type=\"number\"\r\n          onChange={(event) => setData({ ...data, house: event.target.value })}\r\n          placeholder=\"Дом\"\r\n        />\r\n        <input\r\n          value={data.app}\r\n          type=\"number\"\r\n          onChange={(event) => setData({ ...data, app: event.target.value })}\r\n          placeholder=\"Квартира\"\r\n        />\r\n        <select>\r\n          <option>Наличными</option>\r\n          <option>Картой при получении</option>\r\n        </select>\r\n        <button className=\"btn\" onClick={() => handleCreateOrder(data)}>\r\n          Подтвердить\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModWindow;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../Store\";\r\nimport \"./CartPage.css\";\r\nimport { addCart, removeFromCart } from \"../Store/apptrixSlice\";\r\nimport { useState } from \"react\";\r\nimport ModWindow from \"./ModWindow\";\r\n\r\nconst CartPage = () => {\r\n  const [modAct, setModAct] = useState(false);\r\n  const count = useSelector((state: RootState) => state.cart);\r\n  const dispatch = useDispatch();\r\n  let sum = 0;\r\n\r\n  let arrSum = count.cart.map((item: any) => {\r\n    return item.count * item.data.price;\r\n  });\r\n  sum = arrSum.reduce((acc: any, item: any) => {\r\n    return acc + item;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"cart_dish_page\">\r\n      {count.cart.map((item: any) => {\r\n        return (\r\n          <div className=\"one_dish_cart\" key={item.data.id}>\r\n            <img src={item.data.image} width={100} />\r\n            <div className=\"one_dish_name\">\r\n              <div style={{ fontWeight: \"bold\" }}>Название:</div>\r\n              <div>{item.data.name}</div>\r\n            </div>\r\n            <div className=\"one_dish_name\">\r\n              <div style={{ fontWeight: \"bold\" }}>Цена:</div>\r\n              <div>{item.data.price}</div>\r\n            </div>\r\n            <div className=\"one_dish_name\">\r\n              <div className=\"one_dish_btn\">\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => dispatch(removeFromCart(item))}\r\n                >\r\n                  -\r\n                </button>\r\n                {item.count}\r\n                <button className=\"btn\" onClick={() => dispatch(addCart(item))}>\r\n                  +\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {count.cart.length > 0 ? (\r\n        <div className=\"order_confirm\">\r\n          Сумма: {sum}\r\n          <button className=\"btn\" onClick={() => setModAct(true)}>\r\n            Оформить\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"cart_null\">Ваша корзина пуста</div>\r\n      )}\r\n      {count.cart.length > 0 && modAct && (\r\n        <ModWindow modAct={modAct} setModAct={setModAct} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, addDoc, getDocs } from \"firebase/firestore\";\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAf11dSflFQTAsNCo2s-37S-qaBr1opnuQ\",\r\n  authDomain: \"apptrix-22335.firebaseapp.com\",\r\n  projectId: \"apptrix-22335\",\r\n  storageBucket: \"apptrix-22335.appspot.com\",\r\n  messagingSenderId: \"1087599733576\",\r\n  appId: \"1:1087599733576:web:7fb713cc9e3291b962217d\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport async function addDish(\r\n  cfg = { name: \"test\", price: 0, description: \"test\", image: \"\" }\r\n) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"dishes\"), cfg);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nexport async function getDishes() {\r\n  const dishesCol = collection(db, \"dishes\");\r\n  const dishSnapshot = await getDocs(dishesCol);\r\n  const dishList = dishSnapshot.docs.map((doc) => doc.data());\r\n  return dishList;\r\n}\r\n\r\nexport async function addCart(cfg) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"cart\"), cfg);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n    return docRef;\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nexport async function getCart() {\r\n  const cartCol = collection(db, \"cart\");\r\n  const cartSnapshot = await getDocs(cartCol);\r\n  const cartList = cartSnapshot.docs.map((doc) => doc.data());\r\n  return cartList;\r\n}\r\n"],"names":["props","data","setData","useState","street","house","app","sel","navigate","useNavigate","count","useSelector","state","cart","_jsx","className","onClick","setModAct","children","_jsxs","event","stopPropagation","value","type","onChange","target","placeholder","async","obj","paymentCredentilas","orders","map","_ref","id","rest","console","log","result","addCart","localStorage","removeItem","concat","window","location","reload","handleCreateOrder","CartPage","modAct","dispatch","useDispatch","sum","item","price","reduce","acc","src","image","width","style","fontWeight","name","removeFromCart","length","ModWindow","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","getDishes","dishesCol","collection","getDocs","docs","doc","cfg","docRef","addDoc","e","error"],"sourceRoot":""}