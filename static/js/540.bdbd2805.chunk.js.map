{"version":3,"file":"static/js/540.bdbd2805.chunk.js","mappings":"mLAwBA,MA+DA,EA/DcA,KACZ,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC5BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAqB,MA8B/C,IA7BAG,EAAAA,EAAAA,YAAU,KACaC,WAEnB,MAAMC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,OAAQX,GAEzBY,SADgBC,EAAAA,EAAAA,IAAOJ,IACRG,OACjBA,GAEFN,EAASM,EACX,EAGFE,EAAc,GACb,CAACd,KAEJO,EAAAA,EAAAA,YAAU,KAAO,IAADQ,EACd,GAAS,OAALV,QAAK,IAALA,GAAa,QAARU,EAALV,EAAOW,cAAM,IAAAD,GAAbA,EAAeE,OAAQ,CACzB,IAAIC,EAASb,EAAMW,OAAOG,KAAKC,GACtBA,EAAKC,MAAQD,EAAKR,KAAKV,QAGhCC,EACEe,EAAOI,QAAO,CAACC,EAAUH,IAChBG,EAAMH,GACZ,GAEP,IACC,CAACf,IAEAA,EACF,OACEmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qFACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qFACJF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,mCAAQrB,EAAMuB,mBAAmBC,WACtCL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,uBAAMrB,EAAMuB,mBAAmBE,UACpCN,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,qDAAWrB,EAAMuB,mBAAmBG,WAE3CP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sDACHrB,EAAMW,OAAOG,KAAKC,IAEfI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKK,IAAKZ,EAAKR,KAAKqB,MAAOC,MAAO,OAClCP,EAAAA,EAAAA,KAAA,OAAAD,SAAMN,EAAKR,KAAKuB,QAChBR,EAAAA,EAAAA,KAAA,OAAAD,SAAMN,EAAKR,KAAKV,QAAY,oCACnBkB,EAAKC,eAKtBM,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,mCAAQxB,SAEV,C,0FC9EZ,MASM6B,GAAMK,EAAAA,EAAAA,IATW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,+CAIIC,GAAOC,EAAAA,EAAAA,IAAQb,GACfpB,GAAKkC,EAAAA,EAAAA,IAAad,GAaxBvB,eAAesC,IACpB,MAAMC,GAAYC,EAAAA,EAAAA,IAAWrC,EAAI,UAGjC,aAF2BsC,EAAAA,EAAAA,IAAQF,IACLG,KAAK/B,KAAKT,GAAQA,EAAIE,QAEtD,CAEOJ,eAAe2C,EAAQC,GAC5B,IACE,MAAM3C,QAAe4C,EAAAA,EAAAA,KAAOL,EAAAA,EAAAA,IAAWrC,EAAI,QAASyC,GAEpD,OADAE,QAAQC,IAAI,6BAA8B9C,EAAOT,IAC1CS,CACT,CAAE,MAAO+C,GACPF,QAAQG,MAAM,0BAA2BD,EAC3C,CACF,C","sources":["Pages/Order.tsx","firebase.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Order.css\";\r\n\r\ninterface Order {\r\n  count: number;\r\n  id: string;\r\n  paymentCredentilas: {\r\n    street: string;\r\n    id: string;\r\n    house: number;\r\n    app: number;\r\n  };\r\n  data: {\r\n    description: string;\r\n    id: string;\r\n    image: string;\r\n    name: string;\r\n    price: number;\r\n  };\r\n}\r\n\r\nconst Order = () => {\r\n  const { id } = useParams();\r\n  const [price, setPrice] = useState(0);\r\n  const [order, setOrder] = useState<null | any>(null);\r\n  useEffect(() => {\r\n    const fetchDocById = async () => {\r\n      // @ts-ignore\r\n      const docRef = doc(db, \"cart\", id);\r\n      const docSnap = await getDoc(docRef);\r\n      const data = docSnap.data();\r\n      if (data) {\r\n        // @ts-ignore\r\n        setOrder(data);\r\n      }\r\n    };\r\n\r\n    fetchDocById();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (order?.orders?.length) {\r\n      let arrSum = order.orders.map((item: any) => {\r\n        return item.count * item.data.price;\r\n      });\r\n\r\n      setPrice(\r\n        arrSum.reduce((acc: any, item: any) => {\r\n          return acc + item;\r\n        }, 0)\r\n      );\r\n    }\r\n  }, [order]);\r\n\r\n  if (order)\r\n    return (\r\n      <div className=\"order_all\">\r\n        <h2>Заказ оформлен</h2>\r\n        <div className=\"address_order\">\r\n          <h3>Адрес доставки</h3>\r\n          <div>Улица: {order.paymentCredentilas.street}</div>\r\n          <div>Дом: {order.paymentCredentilas.house}</div>\r\n          <div>Квартира: {order.paymentCredentilas.app}</div>\r\n        </div>\r\n        <div className=\"cart_order\">\r\n          <h3>Ваш заказ</h3>\r\n          {order.orders.map((item: any) => {\r\n            return (\r\n              <div className=\"one_dish_on_order\">\r\n                <img src={item.data.image} width={100} />\r\n                <div>{item.data.name}</div>\r\n                <div>{item.data.price}</div>\r\n                Кол-во: {item.count}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <h3>Сумма: {price}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Order;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, addDoc, getDocs } from \"firebase/firestore\";\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAf11dSflFQTAsNCo2s-37S-qaBr1opnuQ\",\r\n  authDomain: \"apptrix-22335.firebaseapp.com\",\r\n  projectId: \"apptrix-22335\",\r\n  storageBucket: \"apptrix-22335.appspot.com\",\r\n  messagingSenderId: \"1087599733576\",\r\n  appId: \"1:1087599733576:web:7fb713cc9e3291b962217d\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport async function addDish(\r\n  cfg = { name: \"test\", price: 0, description: \"test\", image: \"\" }\r\n) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"dishes\"), cfg);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nexport async function getDishes() {\r\n  const dishesCol = collection(db, \"dishes\");\r\n  const dishSnapshot = await getDocs(dishesCol);\r\n  const dishList = dishSnapshot.docs.map((doc) => doc.data());\r\n  return dishList;\r\n}\r\n\r\nexport async function addCart(cfg) {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"cart\"), cfg);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n    return docRef;\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n}\r\n\r\nexport async function getCart() {\r\n  const cartCol = collection(db, \"cart\");\r\n  const cartSnapshot = await getDocs(cartCol);\r\n  const cartList = cartSnapshot.docs.map((doc) => doc.data());\r\n  return cartList;\r\n}\r\n"],"names":["Order","id","useParams","price","setPrice","useState","order","setOrder","useEffect","async","docRef","doc","db","data","getDoc","fetchDocById","_order$orders","orders","length","arrSum","map","item","count","reduce","acc","_jsxs","className","children","_jsx","paymentCredentilas","street","house","app","src","image","width","name","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","getFirestore","getDishes","dishesCol","collection","getDocs","docs","addCart","cfg","addDoc","console","log","e","error"],"sourceRoot":""}